{"version":3,"sources":["./src/app/register/register.component.ts","./src/app/register/register.component.html","./src/app/pizzas/nonvegpizzas/nonvegpizzas.component.ts","./src/app/pizzas/nonvegpizzas/nonvegpizzas.component.html","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/services/admin.service.ts","./src/environments/environment.ts","./src/app/services/cartitems.service.ts","./src/app/carteditems/carteditems.component.ts","./src/app/carteditems/carteditems.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/services/pizza.service.ts","./src/app/admin/admin.component.ts","./src/app/admin/admin.component.html","./src/app/app.module.ts","./src/app/pizzas/vegpizzas/vegpizzas.component.ts","./src/app/pizzas/vegpizzas/vegpizzas.component.html","./src/app/services/user.service.ts","./src/app/app-routing.module.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;;;ICa1B,uEAAkD;IAAA,+EAAoB;IAAA,4DAAO;;;IAS7E,2EAAyE;IAAA,8EAAmB;IAAA,4DAAO;;;IACnG,2EAAwE;IAAA,6EAAkB;IAAA,4DAAO;;;IAYjG,uEAA0C;IAAA,+EAAoB;IAAA,4DAAO;;;IACrE,sEAA6D;IAAA,4GAC7D;IAAA,4DAAM;;AD1BvB,MAAM,iBAAiB;IAK5B,YAAoB,MAAa,EAAS,WAAuB;QAA7C,WAAM,GAAN,MAAM,CAAO;QAAS,gBAAW,GAAX,WAAW,CAAY;QAHjE,YAAO,GAAS,EAAE,CAAC;QACnB,YAAO,GAAC,KAAK,CAAC;IAEuD,CAAC;IAEtE,QAAQ;IACR,CAAC;IAED,cAAc,CAAC,YAAmB;QAChC,8BAA8B;QAE9B,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;QACzC,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QACtC,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;QAErC,MAAM,OAAO,GAAM,EAAC,QAAQ,EAAC,YAAY,CAAC,KAAK,CAAC,QAAQ,EAAC,KAAK,EAAC,YAAY,CAAC,KAAK,CAAC,KAAK,EAAE,IAAI,EAAC,YAAY,CAAC,KAAK,CAAC,IAAI,EAAC,CAAC;QACvH,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YACrD,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;YAC1B,IAAI,CAAC,OAAO,GAAC,IAAI,CAAC;YAClB,KAAK,CAAC,4BAA4B,CAAC;QACrC,CAAC,CAAC,CAAC;IACL,CAAC;;kFAvBU,iBAAiB;iGAAjB,iBAAiB;;QCX9B,uEACI;QAAA,yEACI;QAAA,yEACI;QAAA,yEAAsB;QAAA,gEAClB;QACJ,wEAA6B;QAAA,4EAAiB;QAAA,4DAAK;QACnD,6EACI;QADyB,yRAAY,uBAA4B,IAAC;QAClE,yEACI;QAAA,0EACI;QAAA,4EAA0D;QAAA,oEAAQ;QAAA,4DAAQ;QAC1E,2EAAgC;QAAA,6DAAC;QAAA,4DAAO;QACxC,2EAEA;QAAA,kHAA6E;QACjF,4DAAM;QACV,4DAAM;QACN,0EACI;QAAA,0EACI;QAAA,4EAA0D;QAAA,mEAAO;QAAA,4DAAQ;QACzE,2EAAgC;QAAA,6DAAC;QAAA,4DAAO;QACxC,4EACuF;QAAA,iEACvF;QAAA,kHAAmG;QACnG,kHAAiG;QAErG,4DAAM;QACV,4DAAM;QACN,iEACA;QAAA,0EACI;QAAA,0EACI;QAAA,4EAA0D;QAAA,oEAAQ;QAAA,4DAAQ;QAC1E,2EAAgC;QAAA,6DAAC;QAAA,4DAAO;QACxC,4EAGA;QAAA,kHAAqE;QACrE,gHACM;QACV,4DAAM;QACV,4DAAM;QACN,iEACA;QAAA,0EACI;QAAA,0EACI;QAAA,8EAAoF;QAAA,oEAAQ;QAAA,4DAAS;QACzG,4DAAM;QACV,4DAAM;QACN,iEACJ;QAAA,4DAAO;QACP,4DAAM;QACV,4DAAM;QACV,4DAAM;QACN,4DAAO;;;;;;QAtCoB,2DAAyC;QAAzC,2FAAyC;QAGf,0DAAiD;QAAjD,iGAAiD;QAMxD,0DAA6C;QAA7C,kIAA6C;QAC7C,0DAA4C;QAA5C,iIAA4C;QAY/D,2DAAiC;QAAjC,2FAAiC;QAClC,0DAAqD;QAArD,+KAAqD;QAOR,0DAAgC;QAAhC,gFAAgC;;6FDhC9F,iBAAiB;cAL7B,uDAAS;eAAC;gBACT,QAAQ,EAAE,cAAc;gBACxB,WAAW,EAAE,2BAA2B;gBACxC,SAAS,EAAE,CAAC,2BAA2B,CAAC;aACzC;;;;;;;;;;;;;;AEVD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;;;;;;;ICO9C,yEACI;IAAA,2EACQ;IAAA,iFAAgB;IAAA,uDAA2B;IAAA,4DAAiB;IAC5D,oEACA;IAAA,uFAA+D;IAAA,uDAAyB;IAAA,4DAAoB;IAC5G,sFAA8D;IAAA,uDAAqB;IAAA,4DAAmB;IAGtG,mFACI;IAAA,6EAAgG;IAAtD,oYAAqD;IAAC,uEAAW;IAAA,4DAAS;IACpH,6EAA0C;IAAA,+DAAG;IAAA,4DAAS;IAC1D,4DAAmB;IAC3B,4DAAW;IACf,4DAAM;;;IAXsB,0DAA2B;IAA3B,oGAA2B;IACF,0DAAoB;IAApB,sJAAoB;IAAC,0FAAqB;IACpB,0DAAyB;IAAzB,kGAAyB;IAC1B,0DAAqB;IAArB,8FAAqB;;ADD5F,MAAM,qBAAqB;IAWhC,YAAoB,MAAa,EAAS,YAAyB,EACzC,gBAAiC;QADvC,WAAM,GAAN,MAAM,CAAO;QAAS,iBAAY,GAAZ,YAAY,CAAa;QACzC,qBAAgB,GAAhB,gBAAgB,CAAiB;QAV3D,kBAAa,GAAiB,EAAE,CAAC;QACjC,iBAAY,GAAa,EAAE,CAAC;QAE5B,WAAM,GAAC,EAAE,CAAC;QACV,UAAK,GAAC,EAAE,CAAC;QACT,SAAI,GAAC,EAAE,CAAC;QAER,aAAQ,GAAY,EAAE,CAAC;IAGwC,CAAC;IAEhE,QAAQ;QACN,IAAI,CAAC,YAAY,CAAC,kBAAkB,EAAE,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YACtD,IAAI,CAAC,aAAa,GAAC,IAAI,CAAC;QAC1B,CAAC,CAAC,CAAC;IACL,CAAC;IAED,QAAQ;QACN,IAAG,IAAI,CAAC,IAAI,IAAI,EAAE,EAAC;YACjB,IAAI,CAAC,QAAQ,EAAE,CAAC;SACjB;aACG;YACF,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE;gBACnD,OAAO,GAAG,CAAC,IAAI,CAAC,iBAAiB,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,iBAAiB,EAAE,CAAC,CAAC;YAC3E,CAAC,CAAC,CAAC;SACJ;IACH,CAAC;IAED,SAAS,CAAC,aAAiB,EAAC,KAAS,EAAC,IAAQ;QAC5C,MAAM,CAAC,OAAO,CAAC,iCAAiC,CAAC,CAAC;QAClD,OAAO,CAAC,GAAG,CAAC,aAAa,EAAC,KAAK,EAAC,IAAI,CAAC,CAAC;QACtC,MAAM,aAAa,GAAM,EAAC,MAAM,EAAC,aAAa,EAAC,KAAK,EAAC,KAAK,EAAC,IAAI,EAAC,IAAI,EAAC,SAAS,EAAC,KAAK,EAAG,GAAG,EAAC,IAAI,EAAC,CAAC;QACjG,IAAI,CAAC,gBAAgB,CAAC,kBAAkB,CAAC,aAAa,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YACvE,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAClB,MAAM,CAAC,KAAK,CAAC,0CAA0C,CAAC,CAAC;YACzD,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,cAAc,CAAC,CAAC;QAC5C,CAAC,CAAC,CAAC;IACL,CAAC;;0FAxCU,qBAAqB;qGAArB,qBAAqB;QCXlC,yEACI;QAAA,2EAEJ;QAFwD,uLAAkB,oGAAkB,cAAU,IAA5B;QAAtE,4DAEJ;QAAA,4DAAM;QAGN,yEACI;QAAA,kHAaM;QACV,4DAAM;;QApBkD,0DAAkB;QAAlB,6EAAkB;QAMjB,0DAAgB;QAAhB,sFAAgB;;6FDI5D,qBAAqB;cALjC,uDAAS;eAAC;gBACT,QAAQ,EAAE,kBAAkB;gBAC5B,WAAW,EAAE,+BAA+B;gBAC5C,SAAS,EAAE,CAAC,+BAA+B,CAAC;aAC7C;;;;;;;;;;;;;;AEVD;AAAA;AAAA;AAAA;AAAkD;;;AAO3C,MAAM,aAAa;IAExB,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;0EALU,aAAa;6FAAb,aAAa;QCP1B,wEACI;QAAA,wGAA4C;QAAA,4DAAK;QACjD,gEACA;QAAA,yEAEI;QACA,wEACE;QAAA,mEAA8D;QAC9D,mEAAgD;QAElD,4DAAK;QAGL,yEACE;QAAA,yEACE;QAAA,uEAAiF;QAAA,sEAAU;QAAA,4DAAI;QAC/F,wEACA;QAAA,qEACA;QAAA,4DAAI;QAEN,4DAAM;QACN,2EACE;QAAA,wEAAiF;QAAA,0EAAc;QAAA,4DAAI;QACnG,yEACA;QAAA,sEACA;QAAA,4DAAI;QACN,4DAAM;QAER,4DAAM;QAGN,yEACE;QAAA,uEAAgD;QAClD,4DAAI;QACJ,yEACE;QAAA,uEAAgD;QAClD,4DAAI;QACR,4DAAM;;6FD9BG,aAAa;cALzB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,uBAAuB;gBACpC,SAAS,EAAE,CAAC,uBAAuB,CAAC;aACrC;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAA;AAA2C;;;AAQpC,MAAM,YAAY;IAIvB,YAAoB,UAAsB;QAAtB,eAAU,GAAV,UAAU,CAAY;QAF1C,QAAG,GAAQ,6BAA6B,CAAC;IAEK,CAAC;IAE/C,OAAO;QACL,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;QACnE,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAW,IAAI,CAAC,GAAG,CAAC,CAAC;IACjD,CAAC;;wEATU,YAAY;+FAAZ,YAAY,WAAZ,YAAY,mBAFX,MAAM;6FAEP,YAAY;cAHxB,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACPD;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAA2C;;;AAOpC,MAAM,gBAAgB;IAI3B,YAAoB,UAAsB;QAAtB,eAAU,GAAV,UAAU,CAAY;QAF1C,YAAO,GAAQ,iCAAiC,CAAC;IAEH,CAAC;IAE/C,cAAc;IACd,mBAAmB;QACjB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;QAC/C,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC;YAC1C,IAAI,EAAE,UAAU,GAAG;gBACjB,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACnB,CAAC;YACD,KAAK,EAAE,UAAU,GAAG;gBAClB,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACnB,CAAC;SACF,CAAC;QACF,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,SAAS,CACzC,IAAI,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;QAC3B,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAc,IAAI,CAAC,OAAO,CAAC,CAAC;IAC1D,CAAC;IAED,iBAAiB,CAAC,WAAqB;QACrC,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,EAAC,WAAW,CAAC,CAAC;IAC1D,CAAC;IAGD,kBAAkB;IAClB,oBAAoB;QAClB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;QAC/C,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC;YAC1C,IAAI,EAAE,UAAU,GAAG;gBACjB,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACnB,CAAC;YACD,KAAK,EAAE,UAAU,GAAG;gBAClB,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACnB,CAAC;SACF,CAAC;QACF,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,SAAS,CACzC,IAAI,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;QAC3B,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAc,IAAI,CAAC,OAAO,CAAC,CAAC;IAC1D,CAAC;IAED,kBAAkB,CAAC,YAAsB;QACvC,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,EAAC,YAAY,CAAC,CAAC;IACzD,CAAC;IAED,cAAc,CAAC,EAAY;QACzB,OAAO,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,GAAE,GAAG,GAAE,EAAE,CAAC,CAAC,SAAS,CAC5D,CAAC,IAAI,EAAE,EAAE;YACP,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QACpB,CAAC,EACD,CAAC,KAAK,EAAE,EAAE,CACZ,OAAO,CAAC,GAAG,CAAC,OAAO,GAAE,KAAK,CAAC,CAAC,CAAC;IAC/B,CAAC;;gFAtDY,gBAAgB;mGAAhB,gBAAgB,WAAhB,gBAAgB,mBAFf,MAAM;6FAEP,gBAAgB;cAH5B,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;;;;;ICC9C,yEACI;IAAA,2EACI;IAAA,iFAAgB;IAAA,uDAA+B;IAAA,4DAAiB;IAC5D,iFAAgB;IAAA,uDAAoC;IAAA,4DAAiB;IACrE,oEACA;IAAA,mFAAkB;IAAA,uDAAe;IAAA,4DAAmB;IACpD,mFAAkB;IAAA,wDAA8B;IAAA,4DAAmB;IACnE,oFAAkB;IAAA,wDAAkB;IAAA,4DAAmB;IACvD,oFAAkB;IAAA,wDAAoB;IAAA,4DAAmB;IACzD,oFAAkB;IAAA,wDAAsB;IAAA,4DAAmB;IAE3D,oFACI;IAAA,6EAA4E;IAAlC,uWAAiC;IAAC,4EAAgB;IAAA,4DAAS;IACzG,4DAAmB;IAC3B,4DAAW;IACf,4DAAM;;;IAbkB,0DAA+B;IAA/B,wGAA+B;IAC3B,0DAAoC;IAApC,6GAAoC;IACX,0DAAoB;IAApB,sJAAoB;IAAC,yFAAoB;IAChE,0DAAe;IAAf,wFAAe;IACf,0DAA8B;IAA9B,uGAA8B;IAC9B,0DAAkB;IAAlB,2FAAkB;IAClB,0DAAoB;IAApB,6FAAoB;IACpB,0DAAsB;IAAtB,+FAAsB;;ADCjD,MAAM,oBAAoB;IAK/B,YAAoB,MAAa,EAAS,gBAAiC;QAAvD,WAAM,GAAN,MAAM,CAAO;QAAS,qBAAgB,GAAhB,gBAAgB,CAAiB;QAH3E,iBAAY,GAAa,EAAE,CAAC;QAC5B,aAAQ,GAAY,EAAE,CAAC;IAEwD,CAAC;IAEhF,QAAQ;QACN,IAAI,CAAC,gBAAgB,CAAC,mBAAmB,EAAE,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YAC3D,IAAI,CAAC,YAAY,GAAC,IAAI,CAAC;QACzB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,cAAc,CAAC,EAAM;QACnB,MAAM,CAAC,OAAO,CAAC,8CAA8C,CAAC,CAAC;QAC/D,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;QAChB,IAAI,CAAC,gBAAgB,CAAC,cAAc,CAAC,EAAE,CAAC,CAAC;QACzC,MAAM,CAAC,OAAO,CAAC,8CAA8C,CAAC,CAAC;IAC/D,CAAC;;wFAlBQ,oBAAoB;oGAApB,oBAAoB;QCXjC,yEACI;QAAA,iHAeM;QACV,4DAAM;;QAhBmD,0DAAe;QAAf,qFAAe;;6FDU3D,oBAAoB;cALhC,uDAAS;eAAC;gBACT,QAAQ,EAAE,iBAAiB;gBAC3B,WAAW,EAAE,8BAA8B;gBAC3C,SAAS,EAAE,CAAC,8BAA8B,CAAC;aAC5C;;;;;;;;;;;;;;AEVD;AAAA;AAAA;AAAA;AAA0C;;;;AAOnC,MAAM,YAAY;IALzB;QAME,UAAK,GAAG,eAAe,CAAC;KACzB;;wEAFY,YAAY;4FAAZ,YAAY;QCPzB,yEACE;QACA,uEAAkC;QAAA,wEAAa;QAAA,4DAAI;QAGnD,wEACI;QAAA,wEACE;QAAA,uEAAqI;QAAA,+DAAI;QAAA,4DAAI;QAC/I,4DAAK;QACL,wEACA;QAAA,uEAAsI;QAAA,gEAAK;QAAA,4DAAI;QAC/I,4DAAK;QACL,yEACA;QAAA,wEAAqI;QAAA,iEAAK;QAAA,4DAAI;QAC9I,4DAAK;QAGP,yEACE;QAAA,wEACE;QAAA,8EACF;QAAA,4DAAI;QACJ,0EACE;QAAA,yEAAoH;QAAA,sEAAU;QAAA,4DAAI;QAClI,yEAAuH;QAAA,0EAAc;QAAA,4DAAI;QAE3I,4DAAM;QACR,4DAAK;QACP,4DAAK;QACL,0EACE;QAAA,yEACE;QAAA,yEAC0B;QAAA,wEAAY;QAAA,4DAAI;QAC5C,4DAAK;QACL,yEACE;QAAA,wEAC0B;QAAA,mEAAO;QAAA,4DAAI;QACvC,4DAAK;QACL,4DAAK;QAET,4DAAM;QACN,4EAA+B;;QAjCyC,0DAAyC;QAAzC,0JAAyC;QAG1C,0DAAyC;QAAzC,0JAAyC;QAGzC,0DAAyC;QAAzC,0JAAyC;QAS9B,0DAAyC;QAAzC,2JAAyC;QACtC,0DAAyC;QAAzC,2JAAyC;QAOhD,0DAAyC;QAAzC,2JAAyC;QAIjD,0DAAyC;QAAzC,2JAAyC;;6FD3BlG,YAAY;cALxB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,sBAAsB;gBACnC,SAAS,EAAE,CAAC,sBAAsB,CAAC;aACpC;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAA;AAA2C;;;AAQpC,MAAM,YAAY;IAKvB,YAAoB,UAAsB;QAAtB,eAAU,GAAV,UAAU,CAAY;QAH1C,WAAM,GAAQ,iCAAiC,CAAC;QAChD,YAAO,GAAQ,oCAAoC,CAAC;IAEN,CAAC;IAE/C,eAAe;QACb,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;QAC9C,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC;YACzC,IAAI,EAAE,UAAU,GAAG;gBACjB,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACnB,CAAC;YACD,KAAK,EAAE,UAAU,GAAG;gBAClB,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACnB,CAAC;SACF,CAAC;QACF,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,SAAS,CACxC,IAAI,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;QAC3B,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAe,IAAI,CAAC,MAAM,CAAC,CAAC;IAC1D,CAAC;IAED,kBAAkB;QAChB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;QAC/C,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC;YAC1C,IAAI,EAAE,UAAU,GAAG;gBACjB,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACnB,CAAC;YACD,KAAK,EAAE,UAAU,GAAG;gBAClB,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACnB,CAAC;SACF,CAAC;QACF,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,SAAS,CACzC,IAAI,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;QAC3B,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAkB,IAAI,CAAC,OAAO,CAAC,CAAC;IAC9D,CAAC;;wEAnCU,YAAY;+FAAZ,YAAY,WAAZ,YAAY,mBAFX,MAAM;6FAEP,YAAY;cAHxB,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACPD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;;;ICa1B,2EAA6E;IAAA,8EAAmB;IAAA,4DAAO;;;IACvG,2EAA4E;IAAA,6EAAkB;IAAA,4DAAO;;;IAYrG,uEAAkD;IAAA,+EAAoB;IAAA,4DAAO;;;IAC7E,sEAAqE;IAAA,4GACrE;IAAA,4DAAM;;ADjBvB,MAAM,cAAc;IAQzB,YAAoB,MAAa,EAAS,YAAyB;QAA/C,WAAM,GAAN,MAAM,CAAO;QAAS,iBAAY,GAAZ,YAAY,CAAa;QANnE,eAAU,GAAU,IAAI,CAAC;QACzB,YAAO,GAAS,IAAI,CAAC;QACrB,cAAS,GAAS,EAAE,CAAC;QACrB,cAAS,GAAU,EAAE,CAAC;QACtB,YAAO,GAAC,EAAE,CAAC;IAE4D,CAAC;IAExE,QAAQ;QACN,IAAI,CAAC,YAAY,CAAC,OAAO,EAAE,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YAC3C,IAAI,CAAC,SAAS,GAAC,IAAI,CAAC;QACtB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,WAAW,CAAC,SAAgB;QAC1B,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;QACvB,KAAI,IAAI,CAAC,IAAI,IAAI,CAAC,SAAS,EAC3B;YACE,IAAG,SAAS,CAAC,KAAK,CAAC,OAAO,IAAI,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,OAAO,IAAI,SAAS,CAAC,KAAK,CAAC,QAAQ,IAAI,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,QAAQ,EACjH;gBACE,KAAK,CAAC,SAAS,GAAI,IAAI,GAAG,0BAA0B,CAAC,CAAC;gBACtD,IAAI,CAAC,OAAO,GAAC,KAAK,CAAC;gBACnB,IAAI,CAAC,UAAU,GAAE,CAAC,IAAI,CAAC,UAAU,CAAC;gBAClC,OAAO,CAAC,GAAG,CAAC,qBAAqB,CAAC,CAAC;gBACnC,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,cAAc,CAAC,CAAC;gBAC1C,QAAQ;aACT;SAEF;QACD,IAAG,IAAI,CAAC,OAAO,EAAC;YACd,KAAK,CAAC,cAAc,CAAC,CAAC;SACvB;IACH,CAAC;;4EAlCU,cAAc;8FAAd,cAAc;;QCX3B,uEACI;QAAA,yEACI;QAAA,yEACI;QAAA,yEAAsB;QAAA,gEAClB;QACJ,wEAA6B;QAAA,2EAAgB;QAAA,4DAAK;QAClD,6EACI;QADsB,sRAAY,oBAAsB,IAAC;QACzD,yEACI;QAAA,0EACI;QAAA,4EAA0D;QAAA,mEAAO;QAAA,4DAAQ;QACzE,2EAAgC;QAAA,6DAAC;QAAA,4DAAO;QACxC,2EACuF;QAAA,iEACvF;QAAA,+GAAuG;QACvG,+GAAqG;QAEzG,4DAAM;QACV,4DAAM;QACN,iEACA;QAAA,0EACI;QAAA,0EACI;QAAA,4EAA0D;QAAA,oEAAQ;QAAA,4DAAQ;QAC1E,2EAAgC;QAAA,6DAAC;QAAA,4DAAO;QACxC,4EAGA;QAAA,+GAA6E;QAC7E,6GACM;QACV,4DAAM;QACV,4DAAM;QACN,iEACA;QAAA,0EACI;QAAA,0EACI;QAAA,8EAAiF;QAAA,iEAAK;QAAA,4DAAS;QACnG,4DAAM;QACV,4DAAM;QACN,yEAA4B;QAAA,2EAAe;QAAA,4DAAI;QAAA,iEACnD;QAAA,4DAAO;QACP,4DAAM;QACV,4DAAM;QACV,4DAAM;QACN,4DAAO;;;;;QAnC8C,0DAAqD;QAArD,iGAAqD;QAM5D,0DAAiD;QAAjD,kIAAiD;QACjD,0DAAgD;QAAhD,iIAAgD;QAYnE,2DAAyC;QAAzC,2FAAyC;QAC1C,0DAA6D;QAA7D,+KAA6D;QAOhB,0DAA6B;QAA7B,gFAA6B;;6FDvB3F,cAAc;cAL1B,uDAAS;eAAC;gBACT,QAAQ,EAAE,WAAW;gBACrB,WAAW,EAAE,wBAAwB;gBACrC,SAAS,EAAE,CAAC,wBAAwB,CAAC;aACtC;;;;;;;;;;;;;;AEVD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACjB;AACE;AACW;AACE;AACT;AACU;AACH;AACG;AACS;AACU;AACS;AACN;AAC1B;AACI;AACkB;;AAyBpE,MAAM,SAAS;;wFAAT,SAAS,cAFR,2DAAY;4IAEb,SAAS,mBAHT,EAAE,YATJ;YACP,uEAAa;YACb,0DAAW;YACX,qEAAgB;YAChB,oEAAgB;YAChB,qEAAa;YACb,yEAAe;YACf,6FAAuB;SACxB;mIAIU,SAAS,mBArBlB,2DAAY;QACZ,qEAAc;QACd,kEAAa;QACb,qEAAc;QACd,8EAAiB;QACjB,yFAAkB;QAClB,kGAAqB;QACrB,wFAAoB,aAGpB,uEAAa;QACb,0DAAW;QACX,qEAAgB;QAChB,oEAAgB;QAChB,qEAAa;QACb,yEAAe;QACf,6FAAuB;6FAKd,SAAS;cAvBrB,sDAAQ;eAAC;gBACR,YAAY,EAAE;oBACZ,2DAAY;oBACZ,qEAAc;oBACd,kEAAa;oBACb,qEAAc;oBACd,8EAAiB;oBACjB,yFAAkB;oBAClB,kGAAqB;oBACrB,wFAAoB;iBACrB;gBACD,OAAO,EAAE;oBACP,uEAAa;oBACb,0DAAW;oBACX,qEAAgB;oBAChB,oEAAgB;oBAChB,qEAAa;oBACb,yEAAe;oBACf,6FAAuB;iBACxB;gBACD,SAAS,EAAE,EAAE;gBACb,SAAS,EAAE,CAAC,2DAAY,CAAC;aAC1B;;;;;;;;;;;;;;ACvCD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;;;;;;;ICO9C,yEACI;IAAA,2EACQ;IAAA,iFAAgB;IAAA,uDAAyB;IAAA,4DAAiB;IAC1D,oEACA;IAAA,uFAA+D;IAAA,uDAAwB;IAAA,4DAAoB;IAC3G,sFAA8D;IAAA,uDAAoB;IAAA,4DAAmB;IAGrG,mFACI;IAAA,6EAAsG;IAA5D,0YAA2D;IAAC,uEAAW;IAAA,4DAAS;IAC1H,6EAA0C;IAAA,+DAAG;IAAA,4DAAS;IAC1D,4DAAmB;IAC3B,4DAAW;IACf,4DAAM;;;IAXsB,0DAAyB;IAAzB,kGAAyB;IACA,0DAAmB;IAAnB,qJAAmB;IAAC,wFAAmB;IACjB,0DAAwB;IAAxB,iGAAwB;IACzB,0DAAoB;IAApB,6FAAoB;;ADD3F,MAAM,kBAAkB;IAY7B,YAAoB,MAAa,EAAS,YAAyB,EAC3C,gBAAiC;QADrC,WAAM,GAAN,MAAM,CAAO;QAAS,iBAAY,GAAZ,YAAY,CAAa;QAC3C,qBAAgB,GAAhB,gBAAgB,CAAiB;QAXzD,iBAAY,GAAc,EAAE,CAAC;QAC7B,iBAAY,GAAa,EAAE,CAAC;QAE5B,UAAK,GAAC,EAAE,CAAC;QACT,UAAK,GAAC,EAAE,CAAC;QACT,SAAI,GAAC,EAAE,CAAC;QACR,UAAK,GAAC,EAAE,CAAC;QAET,aAAQ,GAAY,EAAE,CAAC;IAGsC,CAAC;IAE9D,QAAQ;QACN,IAAI,CAAC,YAAY,CAAC,eAAe,EAAE,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YACnD,IAAI,CAAC,YAAY,GAAC,IAAI,CAAC;QACzB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,QAAQ;QACN,IAAG,IAAI,CAAC,IAAI,IAAI,EAAE,EAAC;YACjB,IAAI,CAAC,QAAQ,EAAE,CAAC;SACjB;aACG;YACF,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE;gBACjD,OAAO,GAAG,CAAC,IAAI,CAAC,iBAAiB,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,iBAAiB,EAAE,CAAC,CAAC;YAC3E,CAAC,CAAC,CAAC;SACJ;IACH,CAAC;IAED,SAAS,CAAC,YAAgB,EAAC,KAAS,EAAC,IAAQ,EAAC,KAAS;QACrD,MAAM,CAAC,OAAO,CAAC,iCAAiC,CAAC,CAAC;QAClD,OAAO,CAAC,GAAG,CAAC,YAAY,EAAC,KAAK,EAAC,IAAI,EAAC,KAAK,CAAC,CAAC;QAC3C,MAAM,aAAa,GAAM,EAAC,KAAK,EAAC,YAAY,EAAC,KAAK,EAAC,KAAK,EAAC,IAAI,EAAC,IAAI,EAAC,KAAK,EAAC,KAAK,EAAC,SAAS,EAAC,KAAK,EAAG,GAAG,EAAC,IAAI,EAAC,CAAC;QAC3G,IAAI,CAAC,gBAAgB,CAAC,iBAAiB,CAAC,aAAa,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YACtE,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAClB,MAAM,CAAC,KAAK,CAAC,0CAA0C,CAAC,CAAC;YACzD,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,cAAc,CAAC,CAAC;QAC5C,CAAC,CAAC,CAAC;IACL,CAAC;;oFAzCU,kBAAkB;kGAAlB,kBAAkB;QCX/B,yEACI;QAAA,2EAEJ;QAFwD,oLAAkB,iGAAkB,cAAU,IAA5B;QAAtE,4DAEJ;QAAA,4DAAM;QAGN,yEACI;QAAA,+GAaM;QACV,4DAAM;;QApBkD,0DAAkB;QAAlB,6EAAkB;QAMlB,0DAAe;QAAf,qFAAe;;6FDI1D,kBAAkB;cAL9B,uDAAS;eAAC;gBACT,QAAQ,EAAE,eAAe;gBACzB,WAAW,EAAE,4BAA4B;gBACzC,SAAS,EAAE,CAAC,4BAA4B,CAAC;aAC1C;;;;;;;;;;;;;;AEVD;AAAA;AAAA;AAAA;AAA2C;AACiB;;;AAMrD,MAAM,WAAW;IAItB,YAAoB,UAAsB;QAAtB,eAAU,GAAV,UAAU,CAAY;QAF1C,QAAG,GAAQ,6BAA6B,CAAC;IAEK,CAAC;IAE/C,OAAO;QACL,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;QACnE,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAW,IAAI,CAAC,GAAG,CAAC,CAAC;IACjD,CAAC;IACD,WAAW,CAAC,YAAmB;QAC7B,MAAM,WAAW,GAAC,IAAI,gEAAW,EAAE,CAAC;QACpC,WAAW,CAAC,MAAM,CAAC,cAAc,EAAC,kBAAkB,CAAC,CAAC;QACtD,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAC,YAAY,CAAC,CAAC;IAErD,CAAC;;sEAfU,WAAW;8FAAX,WAAW,WAAX,WAAW,mBAFV,MAAM;6FAEP,WAAW;cAHvB,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACc;AACA;AACH;AACK;AACS;AACU;AACS;AACV;;;AAE3E,MAAM,MAAM,GAAW;IACrB,EAAC,IAAI,EAAC,EAAE,EAAE,UAAU,EAAC,OAAO,EAAG,SAAS,EAAC,MAAM,EAAC;IAChD,EAAC,IAAI,EAAC,OAAO,EAAG,SAAS,EAAC,qEAAc,EAAC;IACzC,EAAC,IAAI,EAAC,MAAM,EAAG,SAAS,EAAC,kEAAa,EAAC;IACvC,EAAC,IAAI,EAAE,OAAO,EAAE,SAAS,EAAC,qEAAc,EAAC;IACzC,EAAC,IAAI,EAAE,UAAU,EAAE,SAAS,EAAC,8EAAiB,EAAC;IAC/C,EAAC,IAAI,EAAE,WAAW,EAAE,SAAS,EAAC,wFAAkB,EAAC;IACjD,EAAC,IAAI,EAAE,cAAc,EAAE,SAAS,EAAC,iGAAqB,EAAC;IACvD,EAAC,IAAI,EAAE,aAAa,EAAE,SAAS,EAAC,uFAAoB,EAAC;CAEtD,CAAC;AAMK,MAAM,gBAAgB;;+FAAhB,gBAAgB;0JAAhB,gBAAgB,kBAHlB,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,EAC7B,4DAAY;mIAEX,gBAAgB,uFAFjB,4DAAY;6FAEX,gBAAgB;cAJ5B,sDAAQ;eAAC;gBACR,OAAO,EAAE,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;gBACvC,OAAO,EAAE,CAAC,4DAAY,CAAC;aACxB;;;;;;;;;;;;;;ACzBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;;;ICa1B,2EAAyE;IAAA,8EAAmB;IAAA,4DAAO;;;IACnG,2EAAwE;IAAA,6EAAkB;IAAA,4DAAO;;;IAYjG,uEAA0C;IAAA,+EAAoB;IAAA,4DAAO;;;IACrE,sEAA6D;IAAA,4GAC7D;IAAA,4DAAM;;;ADhBvB,MAAM,cAAc;IAUzB,YAAoB,MAAa,EAAS,WAAuB;QAA7C,WAAM,GAAN,MAAM,CAAO;QAAS,gBAAW,GAAX,WAAW,CAAY;QARjE,eAAU,GAAU,IAAI,CAAC;QACzB,cAAS,GAAS,EAAE,CAAC;QACrB,SAAI,GAAU,EAAE,CAAC;QACjB,UAAK,GAAQ,EAAE,CAAC;QAChB,aAAQ,GAAQ,EAAE,CAAC;QACnB,UAAK,GAAS,KAAK,CAAC;QACpB,YAAO,GAAS,IAAI,CAAC;IAEgD,CAAC;IAEtE,QAAQ;QACN,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YAC1C,IAAI,CAAC,IAAI,GAAC,IAAI,CAAC;QACjB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,WAAW,CAAC,SAAgB;QAE1B,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;QACvB,KAAI,IAAI,CAAC,IAAI,IAAI,CAAC,IAAI,EACtB;YACE,IAAG,SAAS,CAAC,KAAK,CAAC,KAAK,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,IAAI,SAAS,CAAC,KAAK,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,EAC3F;gBACE,KAAK,CAAC,SAAS,GAAG,IAAI,GAAG,0BAA0B,CAAC,CAAC;gBACrD,IAAI,CAAC,OAAO,GAAC,KAAK,CAAC;gBACnB,IAAI,CAAC,UAAU,GAAE,CAAC,IAAI,CAAC,UAAU,CAAC;gBAClC,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,YAAY,CAAC,CAAC;gBACxC,IAAI,CAAC,KAAK,GAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;gBAC9B,IAAI,CAAC,QAAQ,GAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC;gBACpC,0BAA0B;gBAC1B,IAAI,CAAC,KAAK,GAAC,IAAI,CAAC;aACjB;SAEF;QACD,IAAG,IAAI,CAAC,OAAO,EAAC;YACd,KAAK,CAAC,cAAc,CAAC,CAAC;SACvB;IACH,CAAC;;4EAvCU,cAAc;8FAAd,cAAc;;QCZ3B,uEACI;QAAA,yEACI;QAAA,yEACI;QAAA,yEAAsB;QAAA,gEAClB;QACJ,wEAA6B;QAAA,qEAAU;QAAA,4DAAK;QAC5C,6EACI;QADsB,sRAAY,oBAAsB,IAAC;QACzD,yEACI;QAAA,0EACI;QAAA,4EAA0D;QAAA,mEAAO;QAAA,4DAAQ;QACzE,2EAAgC;QAAA,6DAAC;QAAA,4DAAO;QACxC,2EACuF;QAAA,iEACvF;QAAA,+GAAmG;QACnG,+GAAiG;QAErG,4DAAM;QACV,4DAAM;QACN,iEACA;QAAA,0EACI;QAAA,0EACI;QAAA,4EAA0D;QAAA,oEAAQ;QAAA,4DAAQ;QAC1E,2EAAgC;QAAA,6DAAC;QAAA,4DAAO;QACxC,4EAGA;QAAA,+GAAqE;QACrE,6GACM;QACV,4DAAM;QACV,4DAAM;QACN,iEACA;QAAA,0EACI;QAAA,0EACI;QAAA,8EAAiF;QAAA,iEAAK;QAAA,4DAAS;QACnG,4DAAM;QACV,4DAAM;QACN,yEAA4B;QAAA,2EAAe;QAAA,4DAAI;QAAA,iEAC/C;QAAA,yEAA+F;QAAA,4FAAgC;QAAA,4DAAI;QAAA,iEAEvI;QAAA,4DAAO;QACP,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAO;;;;;QArCkD,0DAAiD;QAAjD,iGAAiD;QAMxD,0DAA6C;QAA7C,kIAA6C;QAC7C,0DAA4C;QAA5C,iIAA4C;QAY/D,2DAAiC;QAAjC,2FAAiC;QAClC,0DAAqD;QAArD,+KAAqD;QAOR,0DAA6B;QAA7B,gFAA6B;QAIpC,0DAAyC;QAAzC,0JAAyC;;6FD1BhG,cAAc;cAL1B,uDAAS;eAAC;gBACT,QAAQ,EAAE,WAAW;gBACrB,WAAW,EAAE,wBAAwB;gBACrC,SAAS,EAAE,CAAC,wBAAwB,CAAC;aACtC;;;;;;;;;;;;;;AEXD;AAAA;AAAA;AAAA;AAAA;AAA+C;AAIU;;;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,gBAAgB,CAAC,0DAAU;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;;;;;;;;;;;;ACXpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,qC","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport {Router} from '@angular/router';\nimport {IUsers} from 'src/app/IUser.model';\nimport {UserService} from 'src/app/services/user.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss']\n})\nexport class RegisterComponent implements OnInit {\n\n  regData=<IUsers>{};\n  msgTrue=false;\n\n  constructor(private router:Router,private userservice:UserService) { }\n\n  ngOnInit(): void {\n  }\n\n  registerSubmit(registerForm:NgForm){\n    //storing registration data...\n    \n    console.log(registerForm.value.username);\n    console.log(registerForm.value.email);\n    console.log(registerForm.value.pass);\n\n    const newuser:any= {username:registerForm.value.username,email:registerForm.value.email, pass:registerForm.value.pass};\n    this.userservice.postRegData(newuser).subscribe(data =>{\n      console.log(registerForm);\n      this.msgTrue=true;\n      alert(\"Registered Successfully!!!\")\n    });\n  }\n  \n}\n","<body>\n    <div class=\"container-fluid\" >\n        <div class=\"row\">\n            <div class=\"col-lg-7\"><br>\n                <!-- <img src=\"/assets/person-icon.jpg\"  align-content=\"center\"  style=\"height:15%;color: burlywood;\"> -->\n            <h1 class=\"font-weight-bold\">Registration Form</h1>\n            <form #registerForm=\"ngForm\" (ngSubmit)=\"registerSubmit(registerForm)\" >\n                <div class=\"form-group\" class=\"form-row\">\n                    <div class=\"col-lg-7\">\n                        <label class=\"font-weight-bold\" style=\"font-size: large;\">Username</label>\n                        <span class=\"required-asterick\">*</span>\n                        <input type=\"text\" class=\"form-control\" name=\"username\" ngModel required #username=\"ngModel\"\n                        placeholder=\"Enter username\" maxlength=\"12\">\n                        <span *ngIf=\"!username.valid && username.touched\">Username is required</span>\n                    </div>\n                </div>\n                <div class=\"form-group\" class=\"form-row\" [class.has-error]=\"!email.valid && email.touched\">\n                    <div class=\"col-lg-7\">\n                        <label class=\"font-weight-bold\" style=\"font-size: large;\">EmailId</label>\n                        <span class=\"required-asterick\">*</span>\n                        <input type=\"email\" class=\"form-control\" name=\"email\" ngModel required #email=\"ngModel\"\n                        placeholder=\"Enter EmailId\" pattern=\"^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$\"><br>\n                        <span class=\"help-block\" *ngIf=\"email.errors?.required && email.touched\">EmailId is required</span>\n                        <span class=\"help-block\" *ngIf=\"email.errors?.pattern && email.touched\">EmailId is invalid</span>\n    \n                    </div>\n                </div>\n                <br>\n                <div class=\"form-group\" class=\"form-row\">\n                    <div class=\"col-lg-7\">\n                        <label class=\"font-weight-bold\" style=\"font-size: large;\">Password</label>\n                        <span class=\"required-asterick\">*</span>\n                        <input type=\"password\" class=\"form-control\" name=\"pass\" ngModel required #pass=\"ngModel\"\n                        placeholder=\"Enter password\" pattern=\"(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[$@$!%*?&])[A-Za-z\\d$@$!%*?&].{8,}\"\n                        maxlength=\"12\">\n                        <span *ngIf=\"!pass.valid && pass.touched\">Password is required</span>\n                        <div *ngIf=\"pass.errors?.pattern?.maxlength && pass.touched\">Password should contain 1caps,1LowerCase,1Symbol\n                        </div>\n                    </div>\n                </div>\n                <br/>\n                <div class=\"form-row\">\n                    <div class=\"col-lg-7\">\n                        <button type=\"submit\" class=\"btn btn-light btn-lg\" [disabled]=\"!registerForm.valid\">Register</button>\n                    </div>\n                </div>\n                <br>\n            </form> \n            </div>\n        </div>\n    </div>\n    </body>\n    \n\n","import { Component, OnInit } from '@angular/core';\nimport {Router} from '@angular/router';\nimport {INonVegPizzas, ICartList} from 'src/app/IPizzas.model';\nimport { PizzaService} from 'src/app/services/pizza.service';\nimport {CartitemsService} from 'src/app/services/cartitems.service';\n\n@Component({\n  selector: 'app-nonvegpizzas',\n  templateUrl: './nonvegpizzas.component.html',\n  styleUrls: ['./nonvegpizzas.component.scss']\n})\nexport class NonvegpizzasComponent implements OnInit {\n\n  nvegpizzaList:INonVegPizzas[]=[];\n  cartitemList:ICartList[]=[];\n\n  nvname=\"\";\n  price=\"\";\n  size=\"\";\n\n  cartData=<ICartList>{};\n\n  constructor(private router:Router,private pizzaservice:PizzaService,\n                    private cartitemsservice:CartitemsService) { }\n\n  ngOnInit(): void {\n    this.pizzaservice.getNonVegPizzaData().subscribe(data =>{\n      this.nvegpizzaList=data;\n    });\n  }\n\n  onSearch(){\n    if(this.size == \"\"){\n      this.ngOnInit();\n    }\n    else{\n      this.nvegpizzaList = this.nvegpizzaList.filter(res =>{\n        return res.size.toLocaleLowerCase().match(this.size.toLocaleLowerCase());\n      });\n    }\n  }\n\n  addToCart(nvegpizzaName:any,Price:any,Size:any){\n    window.confirm(\"Do u want to cart this product?\");\n    console.log(nvegpizzaName,Price,Size);\n    const cartitemsData:any ={nvname:nvegpizzaName,price:Price,size:Size,addtocart:\"yes\" , buy:\"no\"};\n    this.cartitemsservice.createNVegCartData(cartitemsData).subscribe(data =>{\n      console.log(data);\n      window.alert('Your product has been added to the cart!');\n      this.router.navigateByUrl('/carteditems');\n    });\n  }\n\n\n}\n","<nav class=\"navbar\" style=\"justify-content: center;\">\n    <input class=\"form-control\" type=\"text\" name=\"size\" [(ngModel)]=\"size\" (ngModelChange)=\"onSearch()\"\n    placeholder=\"Enter size to search\" style=\"width: 50%;\">\n</nav> \n\n\n<div class=\"row\"> \n    <div class=\"col-lg-4 col-md-6 mb-4\" *ngFor=\"let nveg of nvegpizzaList\"> \n        <mat-card>\n                <mat-card-title>Pizza Name: {{nveg.nvname}}</mat-card-title>\n                <img class=\"card-img-top\" mat-card-image src=\"{{nveg.image}}\" alt=\"{{nveg.nvname}}\">\n                <mat-card-subtitle style=\"font-size: large;font-weight: bold;\">Pizza Size: {{nveg.size}}</mat-card-subtitle>\n                <mat-card-content style=\"font-size: large;font-weight: bold;\">Price: {{nveg.price}}</mat-card-content>\n                \n                \n                <mat-card-actions>\n                    <button mat-raised-button color=\"primary\" (click)=\"addToCart(nveg.nvname,nveg.price,nveg.size)\">Add To Cart</button>\n                    <button mat-raised-button color=\"accent\" >Buy</button>\n                </mat-card-actions>\n        </mat-card>\n    </div>\n</div>\n\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h1 class=\"font-weight-bold\" style=\"color: aliceblue;font-size: x-large;text-align: center;font-family: Georgia;padding-top: 2%;\">\n    Welcome To Online Pizza Ordering Application</h1>\n    <br>\n    <div id=\"demo\" class=\"carousel slide\" data-ride=\"carousel\">\n\n        <!-- Indicators -->\n        <ul class=\"carousel-indicators\">\n          <li data-target=\"#demo\" data-slide-to=\"0\" class=\"active\"></li>\n          <li data-target=\"#demo\" data-slide-to=\"1\" ></li>\n          \n        </ul>\n        \n        <!-- The slideshow -->\n        <div class=\"carousel-inner\">\n          <div class=\"carousel-item active\">\n            <p style=\"font-weight: bold;font-size: x-large;text-align: center;color: white;\">Veg Pizzas</p>\n            <a routerLink=\"/vegpizzas\">\n            <img src=\"/assets/vegpizza.jpg\" class=\"d-block mx-auto\" alt=\"veg-pizza\" width=\"300px\" height=\"100px\" >\n            </a>\n            \n          </div>\n          <div class=\"carousel-item\">\n            <p style=\"font-weight: bold;font-size: x-large;text-align: center;color: white;\">Non-Veg Pizzas</p>\n            <a routerLink=\"/nonvegpizzas\">\n            <img src=\"/assets/non-veg-pizza.webp\" class=\"d-block mx-auto\" alt=\"non-veg-pizza\" width=\"300px\" height=\"100px\">\n            </a>\n          </div>\n          \n        </div>\n        \n        <!-- Left and right controls -->\n        <a class=\"carousel-control-prev\" href=\"#demo\" data-slide=\"prev\">\n          <span class=\"carousel-control-prev-icon\"></span>\n        </a>\n        <a class=\"carousel-control-next\" href=\"#demo\" data-slide=\"next\">\n          <span class=\"carousel-control-next-icon\"></span>\n        </a>\n    </div>\n      \n\n","import { Injectable } from '@angular/core';\nimport {IAdmin} from 'src/app/IUser.model';\nimport {HttpClient} from '@angular/common/http';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdminService {\n\n  Url:string=\"http://localhost:3000/Admin\";\n\n  constructor(private httpClient: HttpClient) { }\n\n  getData(){\n    this.httpClient.get(this.Url).subscribe(data => console.log(data));\n    return this.httpClient.get<IAdmin[]>(this.Url);\n  }\n  \n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport { ICartList } from '../IPizzas.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CartitemsService {\n\n  Httpurl:string=\"http://localhost:3000/cartitems\";\n\n  constructor(private httpClient: HttpClient) { }\n\n  //veg data....\n  getVegPizzaCartData(){\n    console.log(this.httpClient.get(this.Httpurl));\n    this.httpClient.get(this.Httpurl).subscribe({\n      next: function (res){\n        console.log(res);\n      },\n      error: function (err){\n        console.log(err);\n      } \n    })\n    this.httpClient.get(this.Httpurl).subscribe(\n      data => console.log(data));\n      return this.httpClient.get<ICartList[]>(this.Httpurl);\n  }\n\n  createVegCartData(cartvegData:ICartList){\n    return this.httpClient.post(this.Httpurl,cartvegData);\n}\n\n\n//non-veg data....\ngetNVegPizzaCartData(){\n  console.log(this.httpClient.get(this.Httpurl));\n  this.httpClient.get(this.Httpurl).subscribe({\n    next: function (res){\n      console.log(res);\n    },\n    error: function (err){\n      console.log(err);\n    } \n  })\n  this.httpClient.get(this.Httpurl).subscribe(\n    data => console.log(data));\n    return this.httpClient.get<ICartList[]>(this.Httpurl);\n}\n\ncreateNVegCartData(cartnvegData:ICartList){\n  return this.httpClient.post(this.Httpurl,cartnvegData);\n}\n\nremoveCartData(id:ICartList){\n  return this.httpClient.delete(this.Httpurl +\"/\" +id).subscribe(\n    (data) =>{\n      console.log(data);\n    },\n    (error) =>\n  console.log(\"Error\" +error));\n}\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ICartList } from '../IPizzas.model';\nimport { CartitemsService } from '../services/cartitems.service';\nimport {Router} from '@angular/router';\n\n\n@Component({\n  selector: 'app-carteditems',\n  templateUrl: './carteditems.component.html',\n  styleUrls: ['./carteditems.component.scss']\n})\nexport class CarteditemsComponent implements OnInit {\n\n  cartItemList:ICartList[]=[];\n  cartData=<ICartList>{};\n\n  constructor(private router:Router,private cartitemsservice:CartitemsService) { }\n\n  ngOnInit(): void {\n    this.cartitemsservice.getVegPizzaCartData().subscribe(data =>{\n      this.cartItemList=data;\n    });\n  }\n\n  removeCartData(id:any){\n    window.confirm(\"Do u want to remove this product from cart ?\");\n    console.log(id);\n    this.cartitemsservice.removeCartData(id);\n    window.confirm(\"Removed the product from cart successfully!!\");\n    }\n\n}\n","<div class=\"row\"> \n    <div class=\"col-lg-4 col-md-6 mb-4\" *ngFor=\"let cart of cartItemList\"> \n        <mat-card>\n            <mat-card-title>Veg-Pizza Name: {{cart.vname}} </mat-card-title>\n                <mat-card-title>Non-Veg Pizza Name: {{cart.nvname}} </mat-card-title>\n                <img class=\"card-img-top\" mat-card-image src=\"{{cart.image}}\" alt=\"{{cart.vname}}\">\n                <mat-card-content>Id: {{cart.id}}</mat-card-content>\n                <mat-card-content>AddToCart: {{cart.addtocart}} </mat-card-content>\n                <mat-card-content>Buy: {{cart.buy}} </mat-card-content> \n                <mat-card-content>Size: {{cart.size}} </mat-card-content> \n                <mat-card-content>Price: {{cart.price}} </mat-card-content> \n\n                <mat-card-actions>\n                    <button mat-raised-button color=\"primary\" (click)=\"removeCartData(cart.id)\">Remove from Cart</button>\n                </mat-card-actions>\n        </mat-card>\n    </div>\n</div>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'Pizza-Project';\n}\n","<nav class=\"navbar navbar-expand-sm bg-light navbar-light\">\n  <!-- Brand -->\n  <a class=\"navbar-brand\" href=\"#\" >Pizza-Project</a>\n\n  <!-- Links -->\n  <ul class=\"navbar-nav\" id=\"social_icons\">\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" routerLink=\"home\" routerLinkActive=\"active\" [routerLinkActiveOptions]=\"{exact: true}\" style=\"font-size: large;\" >Home</a>\n      </li>\n      <li class=\"nav-item\">\n      <a class=\"nav-link\" routerLink=\"login\" routerLinkActive=\"active\" [routerLinkActiveOptions]=\"{exact: true}\" style=\"font-size: large;\" >Login</a>\n      </li>\n      <li class=\"nav-item\">\n      <a class=\"nav-link\" routerLink=\"admin\" routerLinkActive=\"active\" [routerLinkActiveOptions]=\"{exact: true}\" style=\"font-size: large;\">Admin</a>\n      </li>\n\n    <!-- Dropdown -->\n    <li class=\"nav-item dropdown\">\n      <a class=\"nav-link dropdown-toggle\" href=\"#\" id=\"navbardrop\" data-toggle=\"dropdown\" style=\"font-size: large;\">\n        Gadgets Category\n      </a>\n      <div class=\"dropdown-menu\">\n        <a class=\"dropdown-item\" routerLink=\"vegpizzas\" routerLinkActive=\"active\" [routerLinkActiveOptions]=\"{exact: true}\">Veg-Pizzas</a>\n        <a class=\"dropdown-item\" routerLink=\"nonvegpizzas\" routerLinkActive=\"active\" [routerLinkActiveOptions]=\"{exact: true}\">Non-veg Pizzas</a>\n        \n      </div>\n    </li>\n  </ul>\n  <ul class=\"navbar-nav ml-auto\" >\n    <li class=\"nav-item\" >\n      <a class=\"nav-link\"  routerLink=\"carteditems\" routerLinkActive=\"active\" [routerLinkActiveOptions]=\"{exact: true}\" \n      style=\"font-size: large;\">Add To Cart </a>\n    </li>\n    <li class=\"nav-item\" >\n      <a class=\"nav-link\" routerLink=\"home\" routerLinkActive=\"active\" [routerLinkActiveOptions]=\"{exact: true}\" \n      style=\"font-size: large;\">LogOut </a>\n    </li>\n    </ul>\n\n</nav>\n<router-outlet></router-outlet>","import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {IVegPizzas,INonVegPizzas} from 'src/app/IPizzas.model';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PizzaService {\n\n  apiUrl:string=\"http://localhost:3000/vegpizzas\";\n  httpUrl:string=\"http://localhost:3000/nonvegpizzas\";\n\n  constructor(private httpClient: HttpClient) { }\n\n  getVegPizzaData(){\n    console.log(this.httpClient.get(this.apiUrl));\n    this.httpClient.get(this.apiUrl).subscribe({\n      next: function (res){\n        console.log(res);\n      },\n      error: function (err){\n        console.log(err);\n      } \n    })\n    this.httpClient.get(this.apiUrl).subscribe(\n      data => console.log(data));\n      return this.httpClient.get<IVegPizzas[]>(this.apiUrl);\n  }\n\n  getNonVegPizzaData(){\n    console.log(this.httpClient.get(this.httpUrl));\n    this.httpClient.get(this.httpUrl).subscribe({\n      next: function (res){\n        console.log(res);\n      },\n      error: function (err){\n        console.log(err);\n      } \n    })\n    this.httpClient.get(this.httpUrl).subscribe(\n      data => console.log(data));\n      return this.httpClient.get<INonVegPizzas[]>(this.httpUrl);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport {IAdmin} from 'src/app/IUser.model';\nimport { AdminService } from '../services/admin.service';\n\n@Component({\n  selector: 'app-admin',\n  templateUrl: './admin.component.html',\n  styleUrls: ['./admin.component.scss']\n})\nexport class AdminComponent implements OnInit {\n\n  isDisabled:boolean= true;\n  msgTrue:boolean=true;\n  adminData=<IAdmin>{};\n  adminlist:IAdmin[]=[];\n  emailid=\"\";\n\n  constructor(private router:Router,private adminservice:AdminService) { }\n\n  ngOnInit(): void {\n    this.adminservice.getData().subscribe(data =>{\n      this.adminlist=data;\n    });\n  }\n\n  adminSubmit(adminForm:NgForm){\n    console.log(adminForm);\n    for(let k in this.adminlist)\n    {\n      if(adminForm.value.emailid == this.adminlist[k].emailid && adminForm.value.password == this.adminlist[k].password)\n      {\n        alert(\"Welcome\"  + \"\\n\" + \"Login is Successfull!!!!\");\n        this.msgTrue=false;\n        this.isDisabled =!this.isDisabled;\n        console.log('entered admin login');\n        this.router.navigateByUrl('/admincreate');\n        //break;\n      }\n      \n    }\n    if(this.msgTrue){\n      alert(\"Login Failed\");\n    }\n  }\n\n}\n","<body>\n    <div class=\"container-fluid\" >\n        <div class=\"row\">\n            <div class=\"col-lg-7\"><br>\n                <!-- <img src=\"/assets/person-icon.jpg\"  align-content=\"center\"  style=\"height:15%;color: burlywood;\"> -->\n            <h1 class=\"font-weight-bold\">Admin Login Form</h1>\n            <form #adminForm=\"ngForm\" (ngSubmit)=\"adminSubmit(adminForm)\" >\n                <div class=\"form-group\" class=\"form-row\" [class.has-error]=\"!emailid.valid && emailid.touched\">\n                    <div class=\"col-lg-7\">\n                        <label class=\"font-weight-bold\" style=\"font-size: large;\">EmailId</label>\n                        <span class=\"required-asterick\">*</span>\n                        <input type=\"email\" class=\"form-control\" name=\"emailid\" ngModel required #emailid=\"ngModel\"\n                        placeholder=\"Enter EmailId\" pattern=\"^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$\"><br>\n                        <span class=\"help-block\" *ngIf=\"emailid.errors?.required && emailid.touched\">EmailId is required</span>\n                        <span class=\"help-block\" *ngIf=\"emailid.errors?.pattern && emailid.touched\">EmailId is invalid</span>\n    \n                    </div>\n                </div>\n                <br>\n                <div class=\"form-group\" class=\"form-row\">\n                    <div class=\"col-lg-7\">\n                        <label class=\"font-weight-bold\" style=\"font-size: large;\">Password</label>\n                        <span class=\"required-asterick\">*</span>\n                        <input type=\"password\" class=\"form-control\" name=\"password\" ngModel required #password=\"ngModel\"\n                        placeholder=\"Enter password\" pattern=\"(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[$@$!%*?&])[A-Za-z\\d$@$!%*?&].{8,}\"\n                        maxlength=\"12\">\n                        <span *ngIf=\"!password.valid && password.touched\">Password is required</span>\n                        <div *ngIf=\"password.errors?.pattern?.maxlength && password.touched\">Password should contain 1caps,1LowerCase,1Symbol\n                        </div>\n                    </div>\n                </div>\n                <br/>\n                <div class=\"form-row\">\n                    <div class=\"col-lg-7\">\n                        <button type=\"submit\" class=\"btn btn-light btn-lg\" [disabled]=\"!adminForm.valid\">Login</button>\n                    </div>\n                </div>\n                <a routerLink=\"forgotpass\" >Forgot Password</a><br>  \n            </form> \n            </div>\n        </div>\n    </div>\n    </body>\n    \n    \n\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {FormsModule} from '@angular/forms';\nimport {HttpClientModule} from '@angular/common/http';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './login/login.component';\nimport { HomeComponent } from './home/home.component';\nimport { AdminComponent } from './admin/admin.component';\nimport { RegisterComponent } from './register/register.component';\nimport { VegpizzasComponent } from './pizzas/vegpizzas/vegpizzas.component';\nimport { NonvegpizzasComponent } from './pizzas/nonvegpizzas/nonvegpizzas.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatButtonModule} from '@angular/material/button';\nimport { CarteditemsComponent } from './carteditems/carteditems.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    HomeComponent,\n    AdminComponent,\n    RegisterComponent,\n    VegpizzasComponent,\n    NonvegpizzasComponent,\n    CarteditemsComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpClientModule,\n    AppRoutingModule,\n    MatCardModule,\n    MatButtonModule,\n    BrowserAnimationsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { IVegPizzas,ICartList } from 'src/app/IPizzas.model';\nimport { PizzaService } from 'src/app/services/pizza.service';\nimport { Router} from '@angular/router';\nimport {CartitemsService} from 'src/app/services/cartitems.service';\n\n@Component({\n  selector: 'app-vegpizzas',\n  templateUrl: './vegpizzas.component.html',\n  styleUrls: ['./vegpizzas.component.scss']\n})\nexport class VegpizzasComponent implements OnInit {\n\n  vegpizzaList:IVegPizzas[]=[];\n  cartitemList:ICartList[]=[];\n\n  vname=\"\";\n  price=\"\";\n  size=\"\";\n  image=\"\";\n\n  cartData=<ICartList>{};\n\n  constructor(private router:Router,private pizzaservice:PizzaService,\n                  private cartitemsservice:CartitemsService) { }\n\n  ngOnInit(): void {\n    this.pizzaservice.getVegPizzaData().subscribe(data =>{\n      this.vegpizzaList=data;\n    });\n  }\n\n  onSearch(){\n    if(this.size == \"\"){\n      this.ngOnInit();\n    }\n    else{\n      this.vegpizzaList = this.vegpizzaList.filter(res =>{\n        return res.size.toLocaleLowerCase().match(this.size.toLocaleLowerCase());\n      });\n    }\n  }\n\n  addToCart(vegpizzaName:any,Price:any,Size:any,Image:any){\n    window.confirm(\"Do u want to cart this product?\");\n    console.log(vegpizzaName,Price,Size,Image);\n    const cartitemsData:any ={vname:vegpizzaName,price:Price,size:Size,image:Image,addtocart:\"yes\" , buy:\"no\"};\n    this.cartitemsservice.createVegCartData(cartitemsData).subscribe(data =>{\n      console.log(data);\n      window.alert('Your product has been added to the cart!');\n      this.router.navigateByUrl('/carteditems');\n    });\n  }\n\n}\n","<nav class=\"navbar\" style=\"justify-content: center;\">\n    <input class=\"form-control\" type=\"text\" name=\"size\" [(ngModel)]=\"size\" (ngModelChange)=\"onSearch()\"\n    placeholder=\"Enter size to search\" style=\"width: 50%;\">\n</nav> \n\n\n<div class=\"row\"> \n    <div class=\"col-lg-4 col-md-6 mb-4\" *ngFor=\"let veg of vegpizzaList\"> \n        <mat-card>\n                <mat-card-title>Pizza Name: {{veg.vname}}</mat-card-title>\n                <img class=\"card-img-top\" mat-card-image src=\"{{veg.image}}\" alt=\"{{veg.vname}}\">\n                <mat-card-subtitle style=\"font-size: large;font-weight: bold;\">Pizza Size: {{veg.size}}</mat-card-subtitle>\n                <mat-card-content style=\"font-size: large;font-weight: bold;\">Price: {{veg.price}}</mat-card-content>\n                \n                \n                <mat-card-actions>\n                    <button mat-raised-button color=\"primary\" (click)=\"addToCart(veg.vname,veg.price,veg.size,veg.image)\">Add To Cart</button>\n                    <button mat-raised-button color=\"accent\" >Buy</button>\n                </mat-card-actions>\n        </mat-card>\n    </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport {HttpClient,HttpHeaders} from '@angular/common/http';\nimport {IUsers} from 'src/app/IUser.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  Url:string=\"http://localhost:3000/users\";\n\n  constructor(private httpClient: HttpClient) { }\n\n  getData(){\n    this.httpClient.get(this.Url).subscribe(data => console.log(data));\n    return this.httpClient.get<IUsers[]>(this.Url);\n  }\n  postRegData(storeRegData:IUsers){\n    const httpHeaders=new HttpHeaders();\n    httpHeaders.append('content-type','application/json');\n    return this.httpClient.post(this.Url,storeRegData);\n    \n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport {LoginComponent} from './login/login.component';\nimport {HomeComponent} from './home/home.component';\nimport { AdminComponent } from './admin/admin.component';\nimport { RegisterComponent } from './register/register.component';\nimport { VegpizzasComponent } from './pizzas/vegpizzas/vegpizzas.component';\nimport { NonvegpizzasComponent } from './pizzas/nonvegpizzas/nonvegpizzas.component';\nimport { CarteditemsComponent } from './carteditems/carteditems.component';\n\nconst routes: Routes = [\n  {path:'', redirectTo:'/home' , pathMatch:'full'},\n  {path:'login',  component:LoginComponent},\n  {path:'home',  component:HomeComponent},\n  {path: 'admin', component:AdminComponent},\n  {path: 'register', component:RegisterComponent},\n  {path: 'vegpizzas', component:VegpizzasComponent},\n  {path: 'nonvegpizzas', component:NonvegpizzasComponent},\n  {path: 'carteditems', component:CarteditemsComponent}\n\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport {IUsers} from 'src/app/IUser.model';\nimport {UserService} from 'src/app/services/user.service';\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n\n  isDisabled:boolean= true;\n  loginData=<IUsers>{};\n  list:IUsers[]=[];\n  email:string=\"\";\n  username:string=\"\";\n  login:boolean=false;\n  msgTrue:boolean=true;\n\n  constructor(private router:Router,private userservice:UserService) { }\n\n  ngOnInit(): void {\n    this.userservice.getData().subscribe(data =>{\n      this.list=data;\n    });\n  }\n\n  loginSubmit(loginForm:NgForm)\n  {\n    console.log(loginForm);\n    for(let i in this.list)\n    {\n      if(loginForm.value.email == this.list[i].email && loginForm.value.pass == this.list[i].pass)\n      {\n        alert(\"Welcome\" + \"\\n\" + \"Login is Successfull!!!!\");\n        this.msgTrue=false;\n        this.isDisabled =!this.isDisabled;\n        this.router.navigateByUrl('/vegpizzas');\n        this.email=this.list[i].email;\n        this.username=this.list[i].username;\n        //this.id=this.list[i].id;\n        this.login=true;\n      }\n      \n    }\n    if(this.msgTrue){\n      alert(\"Login Failed\");\n    }\n  }\n\n}\n","<body>\n    <div class=\"container-fluid\" >\n        <div class=\"row\">\n            <div class=\"col-lg-7\"><br>\n                <!-- <img src=\"/assets/person-icon.jpg\"  align-content=\"center\"  style=\"height:15%;color: burlywood;\"> -->\n            <h1 class=\"font-weight-bold\">Login Form</h1>\n            <form #loginForm=\"ngForm\" (ngSubmit)=\"loginSubmit(loginForm)\" >\n                <div class=\"form-group\" class=\"form-row\" [class.has-error]=\"!email.valid && email.touched\">\n                    <div class=\"col-lg-7\">\n                        <label class=\"font-weight-bold\" style=\"font-size: large;\">EmailId</label>\n                        <span class=\"required-asterick\">*</span>\n                        <input type=\"email\" class=\"form-control\" name=\"email\" ngModel required #email=\"ngModel\"\n                        placeholder=\"Enter EmailId\" pattern=\"^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$\"><br>\n                        <span class=\"help-block\" *ngIf=\"email.errors?.required && email.touched\">EmailId is required</span>\n                        <span class=\"help-block\" *ngIf=\"email.errors?.pattern && email.touched\">EmailId is invalid</span>\n    \n                    </div>\n                </div>\n                <br>\n                <div class=\"form-group\" class=\"form-row\">\n                    <div class=\"col-lg-7\">\n                        <label class=\"font-weight-bold\" style=\"font-size: large;\">Password</label>\n                        <span class=\"required-asterick\">*</span>\n                        <input type=\"password\" class=\"form-control\" name=\"pass\" ngModel required #pass=\"ngModel\"\n                        placeholder=\"Enter password\" pattern=\"(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[$@$!%*?&])[A-Za-z\\d$@$!%*?&].{8,}\"\n                        maxlength=\"12\">\n                        <span *ngIf=\"!pass.valid && pass.touched\">Password is required</span>\n                        <div *ngIf=\"pass.errors?.pattern?.maxlength && pass.touched\">Password should contain 1caps,1LowerCase,1Symbol\n                        </div>\n                    </div>\n                </div>\n                <br/>\n                <div class=\"form-row\">\n                    <div class=\"col-lg-7\">\n                        <button type=\"submit\" class=\"btn btn-light btn-lg\" [disabled]=\"!loginForm.valid\">Login</button>\n                    </div>\n                </div>\n                <a routerLink=\"forgotpass\" >Forgot Password</a><br>\n                <a routerLink=\"/register\" routerLinkActive=\"active\" [routerLinkActiveOptions]=\"{exact: true}\" >Don't have account?Register Here</a><br>\n                \n            </form> \n            </div>\n        </div>\n    </div>\n</body>\n    \n    \n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}